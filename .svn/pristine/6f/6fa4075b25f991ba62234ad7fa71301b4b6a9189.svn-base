package com.rms.serviceImpl;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Service;

import com.rms.dao.EMRDataRepository;
import com.rms.model.MstPatientDetails;
import com.rms.service.IPatientEMRData;
import com.rms.util.DecriptionEncription;
import com.rms.util.EmailAndSMSService;
import com.rms.util.UtilityService;

/**
 * @author Susheel.Kumar
 *
 */


@Component
@Service
public class EMRServiceImpl implements IPatientEMRData {
@Autowired
EMRDataRepository eMRDataRepository;	
	
@Autowired
EmailAndSMSService emailAndSMSService;
	
@Autowired
DecriptionEncription decriptionEncription;
 
@Autowired
UtilityService utilityService;



/*@Override
	public   List<MstPatientDetails> getPatHistory(List<MstPatientDetails> historyList) {
		// TODO Auto-generated method stub
		return eMRDataRepository.saveAll(historyList);
	}*/

	@Override
	public List<MstPatientDetails> sendSmsAndEmailToUser(MstPatientDetails mstPatientDetails) throws Exception {
		// TODO Auto-generated method stub
		
		  List<MstPatientDetails> patientDetail=eMRDataRepository.findByCheckOutTime("2019-04-24 14:16:38");
		  sendBulkSmsToUser( patientDetail );
		return patientDetail;
		
	}
	
	public void sendBulkSmsToUser(List<MstPatientDetails> patientDetail) throws Exception {
	  for(MstPatientDetails patientDetails:patientDetail){  
		String toNumber=  patientDetails.getPatientCellNo().trim();
		String fromNumber="+16122236639";
		String	emailTo=patientDetails.getPatientEmail().trim();
		String emailFrom="susheel.kumar@kmgin.com";
		String userName=decriptionEncription.encryptToSendOverURL(patientDetails.getPatientName());
		String userID=decriptionEncription.encryptToSendOverURL(patientDetails.getPatientId());
		
		String link ="http://125.63.66.123:9020/test-design/Urgentcareuser?userName="+userName+"&userID="+userID;
		
		String contentToSendEmail=utilityService.readMsgEmail();
				
		contentToSendEmail = contentToSendEmail.replace("@LinkLable@", "TakeSurvey");
		contentToSendEmail = contentToSendEmail.replace("@LinkLable1@", "RemindMeLater");
		contentToSendEmail = contentToSendEmail.replace("@LinkLable2@", "Note Interseted");
		contentToSendEmail = contentToSendEmail.replace("@Link@",link);
		emailAndSMSService.sendEmailToUser(emailTo, emailFrom, contentToSendEmail);
		
	     String contentToSend=utilityService.readSMSMsg();
	     contentToSend = contentToSend.replace("@LinkSMS@",link);
		//String contentToSend ="hi this is twilio tetsting";
	     emailAndSMSService.sendSmsToUser(toNumber,fromNumber,contentToSend);
	//			
	    }  
		
	}
	@Override
	public List<MstPatientDetails> getPatHistory(List<MstPatientDetails> historyList) {
		// TODO Auto-generated method stub
		return  eMRDataRepository.saveAll(historyList);
	}
	
	
	/*public void getPatHistory(String provider,String clientId,String startDate) {
		RequestVO requestVO =new RequestVO();
		requestVO.setApptDate(startDate);
		requestVO.setProvider(provider);
		requestVO.setClientId(clientId);
		final String URL_PatientData =CommonConstants.URL;
		HttpEntity<RequestVO> httpEntity = new HttpEntity<RequestVO>(requestVO); 
		 RestTemplate restTemplate = new RestTemplate();
		 ResponseEntity<List<MstPatientDetails>> response = restTemplate.exchange( URL_PatientData, HttpMethod.POST, httpEntity,
		 new ParameterizedTypeReference<List<MstPatientDetails>>(){});
		 List<MstPatientDetails> historyList = response.getBody();
		 eMRDataRepository.saveAll(historyList);	*/
		  
	
}
	
	

	
	

	
	

	

		
